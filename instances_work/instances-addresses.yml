
- hosts:
  - localhost
  vars:
  - run_timeout: 300
  - ssh_timeout: 300
  - ssh_delay: 30
  - instance_type: m1.large
  - ssh_cidr: 0.0.0.0/0
  - ssh_username: root
  - date:
  - keypair_name: keypair-{{ date }}
  - keypair_path: "{{ private_keys_path }}{{ keypair_name }}"
  tasks:

  - name: Debug keypair path
    debug: msg={{ keypair_path }}

  - name: Create a securiy group GroupA for InstanceA
    ec2_group:
      name: "groupA-{{ date }}"
      description: Group A - {{ date }}
      aws_secret_key: "{{ aws_skey }}"
      aws_access_key: "{{ aws_akey }}"
      ec2_url: "{{ ec2_url }}"
      purge_rules: true
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: "{{ ssh_cidr }}"
        - proto: icmp
          from_port: -1
          to_port: -1
          cidr_ip: "{{ ssh_cidr }}"


  - name: Delete a potential existing SSH keypair
    ec2_key: name={{ keypair_name }} state=absent aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }} 
    ignore_errors: true

  - name: Create a SSH keypair
    ec2_key: name={{ keypair_name }} aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }}
    register: instance_key

  - name: Creates the keypair_file
    shell: echo '{{ instance_key['key']['private_key'] }}' > {{ keypair_path }} && chmod 600 {{ keypair_path }}

  - name: Create a new instance A
    ec2: group=groupA-{{ date }} image={{ emi_id }} instance_type={{ instance_type }} state=present wait=yes wait_timeout={{ run_timeout }} zone={{ zone }} key_name={{ instance_key['key']['name'] }} aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }}
    register: instanceA


  - name: Debug instances
    debug: msg={{ item.instances[0] }}
    with_items:
    - "{{ instanceA }}"

  - name: Wait for SSH to be enabled
    local_action:
      wait_for host={{ item.instances[0].public_ip }}
      port=22
      delay={{ ssh_delay }}
      timeout={{ ssh_timeout }}
      state=started
    with_items:
    - "{{ instanceA }}"

  - name: define new hosts
    add_host: hostname={{ item.instances[0].public_ip }} groupname=newinstancesA  ansible_ssh_private_key_file="{{ keypair_path }}" ansible_ssh_user={{ ssh_username }}
    with_items:
    - "{{ instanceA }}"

- hosts:
  - newinstancesA
  tasks:
  - name: Gather data
    setup:
  - name: Gather instances facts
    action: ec2_facts

- hosts:
  - localhost
  tasks:
  - name: Allocate an Elastic IP
    action: ec2_eip aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }}
    register: eip

  - name: Associate EIP to InstanceA
    ec2_eip: ip="{{ eip.public_ip }}" instance_id="{{ item.instances[0].id }}" aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }}
    with_items:
    - "{{ instanceA }}"

  - name: Checking access to instance via EIP
    local_action:
      wait_for host={{ item.public_ip }}
      port=22
      delay={{ ssh_delay }}
      timeout={{ ssh_timeout }}
      state=started
    with_items:
    - "{{ eip }}"

  - name: Dissociate EIP from Instance
    action: ec2_eip ip="{{ eip.public_ip }}" instance_id="{{ instanceA.instances[0].id }}" state=absent aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }}

  - name: Release EIP 
    ec2_eip: ip="{{ eip.public_ip }}" state=absent aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }}

- hosts: localhost
  tasks:
  - name: Terminate instances
    ec2: instance_ids={{ item }} state=absent wait=yes wait_timeout={{ run_timeout }} aws_access_key={{ aws_akey }} aws_secret_key={{ aws_skey }} ec2_url={{ ec2_url }} 
    with_items:
    - "{{ instanceA['instance_ids'] }}"

  - name: Delete security groups
    ec2_group:
      name: "{{ item }}"
      description: Group B - {{ date }}
      aws_secret_key: "{{ aws_skey }}"
      aws_access_key: "{{ aws_akey }}"
      ec2_url: "{{ ec2_url }}"
      purge_rules: true
      state: absent
    with_items:
    - "groupA-{{ date }}"

